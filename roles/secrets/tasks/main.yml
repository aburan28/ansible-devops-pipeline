---
VAULT_DEV_ROOT_TOKEN_ID
 - name: Setup Vault
    command: "vault secrets enable pki"

    command: vault write pki/root/generate/internal common_name={{ common_name }} ttl="{{ pki_ttl }}h"

    command: vault write pki/roles/pki-role allowed_domains={{ common_domains }} allow_subdomains={{ allow_subdomains | default('True') }} max_ttl=72h

export VAULT_SA_NAME=$(kubectl get sa pki-vault -n demo -o jsonpath="{.secrets[*]['name']}")

export SA_JWT_TOKEN=$(kubectl get secret $VAULT_SA_NAME -n demo -o jsonpath="{.data.token}" | base64 --decode; echo)

export SA_CA_CRT=$(kubectl get secret $VAULT_SA_NAME -n demo -o jsonpath="{.data['ca\.crt']}" | base64 --decode; echo)

export K8S_HOST=<host-ip>
export K8s_PORT=6443

  command: vault auth enable kubernetes

  command: vault write auth/kubernetes/config \
    token_reviewer_jwt="$SA_JWT_TOKEN" \
    kubernetes_host="https://$K8S_HOST:$K8s_PORT" \
    kubernetes_ca_cert="$SA_CA_CRT"

- name:
  command: vault write auth/kubernetes/role/pki-cred-role \
    bound_service_account_names=pki-vault \
    bound_service_account_namespaces=demo \
    policies=test-policy \
    ttl=24h